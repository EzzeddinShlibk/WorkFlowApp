//var userID = HttpContext.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
//Guid teamID = getTeamID(userID.ToString());
//var adminteamusers = await _teamuser.Entity.GetAll().Where(a => a.teamId == teamID && a.isAdmin == true && a.isApproved == true && a.isDeleted == false).ToListAsync();

//if (ModelState.IsValid)
//{
//    if (id == Guid.Empty)
//    {
//        try
//        {
//            Project newProject = new Project();
//            Guid projectId = Guid.NewGuid();
//            newProject.Id = projectId;
//            newProject.Name = model.Name;
//            newProject.Description = model.Description;
//            newProject.StartDate = model.StartDate;
//            newProject.EndDate = model.EndDate;
//            newProject.CreatedDate = DateTime.Now;
//            newProject.IsDeleted = false;
//            newProject.IsArchived = false;
//            _project.Entity.Insert(newProject);
//            await _project.SaveAsync();
//            foreach (var item in model.SelectedUserIds)
//            {
//                ProjectsUser projectuser = new ProjectsUser();
//                projectuser.Id = Guid.NewGuid();
//                projectuser.userId = item;
//                projectuser.projectId = projectId;
//                projectuser.CreatedDate = DateTime.Now; ;
//                _projectsUser.Entity.Insert(projectuser);
//                await _projectsUser.SaveAsync();
//            }


//            foreach (var item in adminteamusers)
//            {
//                if (!model.SelectedUserIds.Contains(item.userId))
//                {
//                    ProjectsUser projectuser = new ProjectsUser();
//                    projectuser.Id = Guid.NewGuid();
//                    projectuser.userId = item.userId;
//                    projectuser.projectId = projectId;
//                    projectuser.CreatedDate = DateTime.Now; ;
//                    _projectsUser.Entity.Insert(projectuser);
//                    await _projectsUser.SaveAsync();
//                }
//            }



//            _toastNotification.AddSuccessToastMessage("تم حقظ المشروع بنجاح", new ToastrOptions() { Title = "" });


//        }
//        catch
//        {

//        }


//    }
//    else
//    {
//        try
//        {
//            var oldproject = await _project.Entity.GetByIdAsync(model.Id);
//            oldproject.Name = model.Name;
//            oldproject.Description = model.Description;
//            oldproject.StartDate = model.StartDate;
//            oldproject.EndDate = model.EndDate;
//            oldproject.ModifiedDate = DateTime.Now;
//            _project.Entity.Update(oldproject);
//            await _project.SaveAsync();


//            var oldprojectuser = await _projectsUser.Entity.GetAll().Where(p => p.projectId == model.Id).ToListAsync();

//            if (oldprojectuser.Any())
//            {
//                foreach (var item in oldprojectuser)
//                {


//                    Guid delId = item.Id;
//                    _projectsUser.Entity.Delete(delId);
//                    await _projectsUser.SaveAsync();


//                }
//            }
//            foreach (var item in model.SelectedUserIds)
//            {
//                ProjectsUser projectuser = new ProjectsUser();
//                projectuser.Id = Guid.NewGuid();
//                projectuser.userId = item;
//                projectuser.projectId = model.Id;
//                projectuser.CreatedDate = DateTime.Now; ;
//                _projectsUser.Entity.Insert(projectuser);
//                await _projectsUser.SaveAsync();
//            }


//            foreach (var item in adminteamusers)
//            {
//                if (!model.SelectedUserIds.Contains(item.userId))
//                {
//                    ProjectsUser projectuser = new ProjectsUser();
//                    projectuser.Id = Guid.NewGuid();
//                    projectuser.userId = item.userId;
//                    projectuser.projectId = model.Id;
//                    projectuser.CreatedDate = DateTime.Now; ;
//                    _projectsUser.Entity.Insert(projectuser);
//                    await _projectsUser.SaveAsync();
//                }
//            }



//            id = Guid.Empty;
//        }
//        catch (Exception)
//        {

//            throw;
//        }


//    //    }
//    //var returnmodel = await getDataAsync(userID.ToString());
//    return Json(new { isValid = true, html = Helper.RenderRazorViewToString(this, "_ViewAllProjects", null) });
//}

return Json(new { isValid = false, html = Helper.RenderRazorViewToString(this, "CreateOrEditTask", model) });

